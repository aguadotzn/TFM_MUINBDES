# Path datos contaminación "Datos/Contaminación"
setwd("data/hourly_data")
# Path datos contaminación "Datos/Contaminación"
setwd("../data/hourly_data")
# Listamos los ficheros a cargar
ficheros <- list.files(pattern = ".*mo1[3-8].txt")
# Listamos los ficheros a cargar
ficheros <- list.files(pattern = ".*mo1[0-9].txt")
# Listamos los ficheros a cargar
hourly_data<- list.files(pattern = ".*mo1[0-9].txt")
# Determinamos el ancho de cada campo
long <- c(8,2,2,2,2,2,2,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6)
# Determinamos el nombre de las columnas
column_name <- c("estacion","contaminante","tecnica","periodo","anyo","mes","dia","hora1","hora2","hora3","hora4","hora5","hora6","hora7","hora8","hora9","hora10","hora11","hora12","hora13","hora14","hora15","hora16","hora17","hora18","hora19","hora20","hora21","hora22","hora23","hora24")
# Cargamos los datos en un DataFrame. Las medidas no válidas ("00.00N") se sobreescriben con "NA"
for (file in hourly_data){
# Si el DataSet existe, creamos un DataSet auxiliar para unir los datos
if (exists("calidadAireHoras")){
temp_dataset <- read.fwf(file = file, widths = long, header = FALSE, col.names = column_name, na.strings = c("00.00N"))
calidadAireHoras <- rbind(calidadAireHoras, temp_dataset)
rm(temp_dataset)
}
# Si el DataSet no existe, lo creamos
if (!exists("calidadAireHoras")){
calidadAireHoras <- read.fwf(file = fichero, widths = long, header = FALSE, col.names = column_name, na.strings = c("00.00N"))
}
}
# Cargamos los datos en un DataFrame. Las medidas no válidas ("00.00N") se sobreescriben con "NA"
for (file in hourly_data){
# Si el DataSet existe, creamos un DataSet auxiliar para unir los datos
if (exists("hourlyAirQuality")){
temp_dataset <- read.fwf(file = file, widths = long, header = FALSE, col.names = column_name, na.strings = c("00.00N"))
hourlyAirQuality <- rbind(hourlyAirQuality, temp_dataset)
rm(temp_dataset)
}
# Si el DataSet no existe, lo creamos
if (!exists("hourlyAirQuality")){
hourlyAirQuality <- read.fwf(file = file, widths = long, header = FALSE, col.names = column_name, na.strings = c("00.00N"))
}
}
# Unimos las columnas año, mes y dia en una única columna fecha
hourlyAirQuality<-transform(hourlyAirQuality, anyo=paste(anyo, mes, dia, sep="/"))
colnames(hourlyAirQuality)[5]<-"fecha"
hourlyAirQuality<-hourlyAirQuality[,!names(hourlyAirQuality) %in% c("mes", "dia")]
# Eliminamos la V de los valores válidos de cada medición horaria
for (i in 6:29) {
hourlyAirQuality[,i]<-gsub("V","",hourlyAirQuality[,i])
}
# Corregimos el tipo de dato de cada columna
hourlyAirQuality <- transform(hourlyAirQuality, estacion=as.factor(estacion), contaminante=as.factor(contaminante), tecnica=as.factor(tecnica), periodo=as.factor(periodo), fecha=as.Date(fecha, format("%y/%m/%d")))
hourlyAirQuality[,6:29] <- sapply(hourlyAirQuality[,6:29], as.numeric)
write.csv(hourlyAirQuality, file = "hourlyAirQuality.csv", row.names = FALSE)
write.csv(hourlyAirQuality, file = "/formatted_data/hourlyAirQuality.csv", row.names = FALSE)
View(hourlyAirQuality)
View(hourlyAirQuality)
write.csv(hourlyAirQuality, file = "/formatted_data/hourlyAirQuality.csv", row.names = FALSE)
write.csv(hourlyAirQuality, file = "formatted_data/hourlyAirQuality.csv", row.names = FALSE)
hourlyAirQuality[,6:29] <- sapply(hourlyAirQuality[,6:29], as.numeric)
write.csv(hourlyAirQuality, file = "/formatted_data/hourlyAirQuality.csv", row.names = FALSE)
#Output path
OutPath <- "/formatted_data/"
#Table to dump as output
OutName <- hourlyAirQuality
write.csv(OutTbl, file = OutPath, row.names = FALSE)
write.csv(OutName, file = OutPath, row.names = FALSE)
#Output path
OutPath <- "formatted_data/"
#Table to dump as output
OutName <- hourlyAirQuality
write.csv(OutName, file = OutPath, row.names = FALSE)
#Output path
OutPath <- "./formatted_data"
#Table to dump as output
OutName <- hourlyAirQuality
write.csv(OutName, file = OutPath, row.names = FALSE)
#Output path
OutPath <- "./formatted_data"
#Table to dump as output
OutName <- hourlyAirQuality
write.csv(OutName, file = OutPath, row.names = FALSE)
View(hourlyAirQuality)
#Output path
OutPath <- "../formatted_data7"
#Table to dump as output
OutName <- hourlyAirQuality
write.csv(OutName, file = OutPath, row.names = FALSE)
#Output path
OutPath <- "../../air_quality_R_analysis/formatted_data/"
#Table to dump as output
OutName <- hourlyAirQuality
write.csv(OutName, file = OutPath, row.names = FALSE)
#Output path
OutPath <- "../air_quality_R_analysis/formatted_data/"
#Table to dump as output
OutName <- hourlyAirQuality
write.csv(OutName, file = OutPath, row.names = FALSE)
#Output path
OutPath <- "../air_quality_R_analysis/formatted_data"
#Table to dump as output
OutName <- hourlyAirQuality
write.csv(OutName, file = OutPath, row.names = FALSE)
#Output path
OutPath <- "/../air_quality_R_analysis/formatted_data"
#Table to dump as output
OutName <- hourlyAirQuality
write.csv(OutName, file = OutPath, row.names = FALSE)
#Output path
OutPath <- "/../air_quality_R_analysis/formatted_data"
write.csv(hourlyAirQuality, file = OutPath, row.names = FALSE)
#Output path
OutPath <- "../air_quality_R_analysis/formatted_data"
write.csv(hourlyAirQuality, file = OutPath, row.names = FALSE)
#Output path
OutPath <- "../../formatted_data"
write.csv(hourlyAirQuality, file = OutPath, row.names = FALSE)
#Output path
OutPath <- "air_quality_R_analysis/../../formatted_data"
write.csv(hourlyAirQuality, file = OutPath, row.names = FALSE)
#Output path
OutPath <- "air_quality_R_analysis/../../"
write.csv(hourlyAirQuality, file = OutPath, row.names = FALSE)
#Output path
OutPath <- "/../../"
#Output path
OutPath <- "/../../formatted_data"
write.csv(hourlyAirQuality, file = OutPath, row.names = FALSE)
#Output path
OutPath <- "/../../formatted_data"
write.csv(hourlyAirQuality, file = OutPath, row.names = FALSE)
#Output path
OutPath <- "/../../formatted_data/hourlyAirQuality.csv"
write.csv(hourlyAirQuality, file = OutPath, row.names = FALSE)
getwd
setwd
getwd()
# Path of the data
setwd("/Users/adrianaguado/Desktop/Code/")
# Select data
hourly_data<- list.files(pattern = ".*mo1[0-9].txt")
# Select data
hourly_data<- list.files(pattern = ".*mo1[0-9].txt")
# Determinamos el ancho de cada campo
long <- c(8,2,2,2,2,2,2,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6)
# Determinamos el nombre de las columnas
column_name <- c("estacion","contaminante","tecnica","periodo","anyo","mes","dia","hora1","hora2","hora3","hora4","hora5","hora6","hora7","hora8","hora9","hora10","hora11","hora12","hora13","hora14","hora15","hora16","hora17","hora18","hora19","hora20","hora21","hora22","hora23","hora24")
# Cargamos los datos en un DataFrame. Las medidas no válidas ("00.00N") se sobreescriben con "NA"
for (file in hourly_data){
# Si el DataSet existe, creamos un DataSet auxiliar para unir los datos
if (exists("hourlyAirQuality")){
temp_dataset <- read.fwf(file = file, widths = long, header = FALSE, col.names = column_name, na.strings = c("00.00N"))
hourlyAirQuality <- rbind(hourlyAirQuality, temp_dataset)
rm(temp_dataset)
}
# Si el DataSet no existe, lo creamos
if (!exists("hourlyAirQuality")){
hourlyAirQuality <- read.fwf(file = file, widths = long, header = FALSE, col.names = column_name, na.strings = c("00.00N"))
}
}
# Unimos las columnas año, mes y dia en una única columna fecha
hourlyAirQuality<-transform(hourlyAirQuality, anyo=paste(anyo, mes, dia, sep="/"))
colnames(hourlyAirQuality)[5]<-"fecha"
hourlyAirQuality<-hourlyAirQuality[,!names(hourlyAirQuality) %in% c("mes", "dia")]
# Eliminamos la V de los valores válidos de cada medición horaria
for (i in 6:29) {
hourlyAirQuality[,i]<-gsub("V","",hourlyAirQuality[,i])
}
# Corregimos el tipo de dato de cada columna
hourlyAirQuality <- transform(hourlyAirQuality, estacion=as.factor(estacion), contaminante=as.factor(contaminante), tecnica=as.factor(tecnica), periodo=as.factor(periodo), fecha=as.Date(fecha, format("%y/%m/%d")))
hourlyAirQuality[,6:29] <- sapply(hourlyAirQuality[,6:29], as.numeric)
setwd()
getwd()
# Important in R establish correctly the path. Just to see in wich path we're working just check in the console with 'getwd()'
setwd("/Users/adrianaguado/Desktop/Code/")
# Select data
hourly_data <- list.files(path = "/data/hourly_data",pattern = ".*mo1[0-9].txt")
getwd
getwd()
# Important in R establish correctly the path. Just to see in wich path we're working just check in the console with 'getwd()'
setwd("/Users/adrianaguado/Desktop/Code/")
# Select data
hourly_data <- list.files(path = "/data/hourly_data/",pattern = ".*mo1[0-9].txt")
# Important in R establish correctly the path. Just to see in wich path we're working just check in the console with 'getwd()'
setwd("/Users/adrianaguado/Desktop/Code/")
# Select data
hourly_data <- list.files(path = "/data/hourly_data/",pattern = ".*mo1[0-9].txt")
# Select data
hourly_data <- list.files(path = "data/hourly_data/",pattern = ".*mo1[0-9].txt")
# Select data
hourly_data <- list.files(path = "data/hourly_data/",pattern = ".*mo1[0-9].txt")
# Determinamos el ancho de cada campo
long <- c(8,2,2,2,2,2,2,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6)
# Determinamos el nombre de las columnas
column_name <- c("estacion","contaminante","tecnica","periodo","anyo","mes","dia","hora1","hora2","hora3","hora4","hora5","hora6","hora7","hora8","hora9","hora10","hora11","hora12","hora13","hora14","hora15","hora16","hora17","hora18","hora19","hora20","hora21","hora22","hora23","hora24")
# Cargamos los datos en un DataFrame. Las medidas no válidas ("00.00N") se sobreescriben con "NA"
for (file in hourly_data){
# Si el DataSet existe, creamos un DataSet auxiliar para unir los datos
if (exists("hourlyAirQuality")){
temp_dataset <- read.fwf(file = file, widths = long, header = FALSE, col.names = column_name, na.strings = c("00.00N"))
hourlyAirQuality <- rbind(hourlyAirQuality, temp_dataset)
rm(temp_dataset)
}
# Si el DataSet no existe, lo creamos
if (!exists("hourlyAirQuality")){
hourlyAirQuality <- read.fwf(file = file, widths = long, header = FALSE, col.names = column_name, na.strings = c("00.00N"))
}
}
# Cargamos los datos en un DataFrame. Las medidas no válidas ("00.00N") se sobreescriben con "NA"
for (file in hourly_data){
# Si el DataSet existe, creamos un DataSet auxiliar para unir los datos
if (exists("hourlyAirQuality")){
temp_dataset <- read.fwf(file = file, widths = long, header = FALSE, col.names = column_name, na.strings = c("00.00N"))
hourlyAirQuality <- rbind(hourlyAirQuality, temp_dataset)
rm(temp_dataset)
}
# Si el DataSet no existe, lo creamos
if (!exists("hourlyAirQuality")){
hourlyAirQuality <- read.fwf(file = file, widths = long, header = FALSE, col.names = column_name, na.strings = c("00.00N"))
}
}
# Cargamos los datos en un DataFrame. Las medidas no válidas ("00.00N") se sobreescriben con "NA"
for (file in hourly_data){
# Si el DataSet existe, creamos un DataSet auxiliar para unir los datos
if (exists("hourlyAirQuality")){
temp_dataset <- read.fwf(file = file, widths = long, header = FALSE, col.names = column_name, na.strings = c("00.00N"))
hourlyAirQuality <- rbind(hourlyAirQuality, temp_dataset)
rm(temp_dataset)
}
# Si el DataSet no existe, lo creamos
if (!exists("hourlyAirQuality")){
hourlyAirQuality <- read.fwf(file = file, widths = long, header = FALSE, col.names = column_name, na.strings = c("00.00N"))
}
}
# Select data
hourly_data <- list.files(path = "data/hourly_data/",pattern = ".*mo1[0-9].txt")
# Determinamos el ancho de cada campo
long <- c(8,2,2,2,2,2,2,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6)
# Determinamos el nombre de las columnas
column_name <- c("estacion","contaminante","tecnica","periodo","anyo","mes","dia","hora1","hora2","hora3","hora4","hora5","hora6","hora7","hora8","hora9","hora10","hora11","hora12","hora13","hora14","hora15","hora16","hora17","hora18","hora19","hora20","hora21","hora22","hora23","hora24")
# Cargamos los datos en un DataFrame. Las medidas no válidas ("00.00N") se sobreescriben con "NA"
for (file in hourly_data){
# Si el DataSet existe, creamos un DataSet auxiliar para unir los datos
if (exists("hourlyAirQuality")){
temp_dataset <- read.fwf(file = file, widths = long, header = FALSE, col.names = column_name, na.strings = c("00.00N"))
hourlyAirQuality <- rbind(hourlyAirQuality, temp_dataset)
rm(temp_dataset)
}
# Si el DataSet no existe, lo creamos
if (!exists("hourlyAirQuality")){
hourlyAirQuality <- read.fwf(file = file, widths = long, header = FALSE, col.names = column_name, na.strings = c("00.00N"))
}
}
# Cargamos los datos en un DataFrame. Las medidas no válidas ("00.00N") se sobreescriben con "NA"
for (file in hourly_data){
# Si el DataSet existe, creamos un DataSet auxiliar para unir los datos
if (exists("hourlyAirQuality")){
temp_dataset <- read.fwf(file = file, widths = long, header = FALSE, col.names = column_name, na.strings = c("00.00N"))
hourlyAirQuality <- rbind(hourlyAirQuality, temp_dataset)
rm(temp_dataset)
}
# Si el DataSet no existe, lo creamos
}
# Important in R establish correctly the path. Just to see in wich path we're working just check in the console with 'getwd()'
setwd("/Users/adrianaguado/Desktop/Code/")
# Important in R establish correctly the path. Just to see in wich path we're working just check in the console with 'getwd()'
setwd("/Users/adrianaguado/Desktop/Code")
getwd()
ls
getwd()
source('~/Desktop/Code/air_quality_R_analysis/calidad_aire_horas.R')
source('~/Desktop/Code/air_quality_R_analysis/calidad_aire_horas.R', echo=TRUE)
# Important in R establish correctly the path. Just to see in wich path we're working just check in the console with 'getwd()'
setwd("/Users/adrianaguado/Desktop/Code/")
# Select data
hourly_data <- list.files(path = "/data/hourly_data/",pattern = ".*mo1[0-9].txt")
# Determinamos el ancho de cada campo
long <- c(8,2,2,2,2,2,2,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6)
# Determinamos el nombre de las columnas
column_name <- c("estacion","contaminante","tecnica","periodo","anyo","mes","dia","hora1","hora2","hora3","hora4","hora5","hora6","hora7","hora8","hora9","hora10","hora11","hora12","hora13","hora14","hora15","hora16","hora17","hora18","hora19","hora20","hora21","hora22","hora23","hora24")
# Cargamos los datos en un DataFrame. Las medidas no válidas ("00.00N") se sobreescriben con "NA"
for (file in hourly_data){
if (exists("hourlyAirQuality")){
temp_dataset <- read.fwf(file = file, widths = long, header = FALSE, col.names = column_name, na.strings = c("00.00N"))
hourlyAirQuality <- rbind(hourlyAirQuality, temp_dataset)
rm(temp_dataset)
}
# Si el DataSet no existe, lo creamos
if (!exists("hourlyAirQuality")){
hourlyAirQuality <- read.fwf(file = file, widths = long, header = FALSE, col.names = column_name, na.strings = c("00.00N"))
}
}
# Important in R establish correctly the path. Just to see in wich path we're working just check in the console with 'getwd()'
setwd("/Users/adrianaguado/Desktop/Code/")
# Select data
hourly_data <- list.files(path = "data/hourly_data",pattern = ".*mo1[0-9].txt")
# Determinamos el ancho de cada campo
long <- c(8,2,2,2,2,2,2,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6)
# Determinamos el nombre de las columnas
column_name <- c("estacion","contaminante","tecnica","periodo","anyo","mes","dia","hora1","hora2","hora3","hora4","hora5","hora6","hora7","hora8","hora9","hora10","hora11","hora12","hora13","hora14","hora15","hora16","hora17","hora18","hora19","hora20","hora21","hora22","hora23","hora24")
# Cargamos los datos en un DataFrame. Las medidas no válidas ("00.00N") se sobreescriben con "NA"
for (file in hourly_data){
if (exists("hourlyAirQuality")){
temp_dataset <- read.fwf(file = file, widths = long, header = FALSE, col.names = column_name, na.strings = c("00.00N"))
hourlyAirQuality <- rbind(hourlyAirQuality, temp_dataset)
rm(temp_dataset)
}
# Si el DataSet no existe, lo creamos
if (!exists("hourlyAirQuality")){
hourlyAirQuality <- read.fwf(file = file, widths = long, header = FALSE, col.names = column_name, na.strings = c("00.00N"))
}
}
# Select data
hourly_data <- list.files(path = "data/hourly_data/",pattern = ".*mo1[0-9].txt")
# Determinamos el ancho de cada campo
long <- c(8,2,2,2,2,2,2,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6)
# Determinamos el nombre de las columnas
column_name <- c("estacion","contaminante","tecnica","periodo","anyo","mes","dia","hora1","hora2","hora3","hora4","hora5","hora6","hora7","hora8","hora9","hora10","hora11","hora12","hora13","hora14","hora15","hora16","hora17","hora18","hora19","hora20","hora21","hora22","hora23","hora24")
# Cargamos los datos en un DataFrame. Las medidas no válidas ("00.00N") se sobreescriben con "NA"
for (file in hourly_data){
if (exists("hourlyAirQuality")){
temp_dataset <- read.fwf(file = file, widths = long, header = FALSE, col.names = column_name, na.strings = c("00.00N"))
hourlyAirQuality <- rbind(hourlyAirQuality, temp_dataset)
rm(temp_dataset)
}
# Si el DataSet no existe, lo creamos
if (!exists("hourlyAirQuality")){
hourlyAirQuality <- read.fwf(file = file, widths = long, header = FALSE, col.names = column_name, na.strings = c("00.00N"))
}
}
# Select data
hourly_data <- list.files(path = "data/hourly_data/",pattern = ".*mo1[0-9].txt")
# Important in R establish correctly the path. Just to see in wich path we're working just check in the console with 'getwd()'
setwd("/Users/adrianaguado/Desktop/Code")
# Select data
hourly_data <- list.files(path = "/data/hourly_data/",pattern = ".*mo1[0-9].txt")
# Select data
hourly_data <- list.files(path = "data/hourly_data/",pattern = ".*mo1[0-9].txt")
# Determinamos el ancho de cada campo
long <- c(8,2,2,2,2,2,2,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6)
# Determinamos el nombre de las columnas
column_name <- c("estacion","contaminante","tecnica","periodo","anyo","mes","dia","hora1","hora2","hora3","hora4","hora5","hora6","hora7","hora8","hora9","hora10","hora11","hora12","hora13","hora14","hora15","hora16","hora17","hora18","hora19","hora20","hora21","hora22","hora23","hora24")
# Cargamos los datos en un DataFrame. Las medidas no válidas ("00.00N") se sobreescriben con "NA"
for (file in hourly_data){
if (exists("hourlyAirQuality")){
temp_dataset <- read.fwf(file = file, widths = long, header = FALSE, col.names = column_name, na.strings = c("00.00N"))
hourlyAirQuality <- rbind(hourlyAirQuality, temp_dataset)
rm(temp_dataset)
}
# Si el DataSet no existe, lo creamos
if (!exists("hourlyAirQuality")){
hourlyAirQuality <- read.fwf(file = file, widths = long, header = FALSE, col.names = column_name, na.strings = c("00.00N"))
}
}
# Cargamos los datos en un DataFrame. Las medidas no válidas ("00.00N") se sobreescriben con "NA"
for (file in hourly_data){
# Si el DataSet no existe, lo creamos
if (!exists("hourlyAirQuality")){
hourlyAirQuality <- read.fwf(file = file, widths = long, header = FALSE, col.names = column_name, na.strings = c("00.00N"))
}
}
# Select data
hourly_data <- list.files(path = "data/hourly_data/", pattern = ".*mo1[0-9].txt")
# Determinamos el ancho de cada campo
long <- c(8,2,2,2,2,2,2,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6)
# Determinamos el nombre de las columnas
column_name <- c("estacion","contaminante","tecnica","periodo","anyo","mes","dia","hora1","hora2","hora3","hora4","hora5","hora6","hora7","hora8","hora9","hora10","hora11","hora12","hora13","hora14","hora15","hora16","hora17","hora18","hora19","hora20","hora21","hora22","hora23","hora24")
# Cargamos los datos en un DataFrame. Las medidas no válidas ("00.00N") se sobreescriben con "NA"
for (file in hourly_data){
if (exists("hourlyAirQuality")){
temp_dataset <- read.fwf(file = file, widths = long, header = FALSE, col.names = column_name, na.strings = c("00.00N"))
hourlyAirQuality <- rbind(hourlyAirQuality, temp_dataset)
rm(temp_dataset)
}
# Si el DataSet no existe, lo creamos
if (!exists("hourlyAirQuality")){
hourlyAirQuality <- read.fwf(file = file, widths = long, header = FALSE, col.names = column_name, na.strings = c("00.00N"))
}
}
# Important in R establish correctly the path. Just to see in wich path we're working just check in the console with 'getwd()'
setwd("/Users/adrianaguado/Desktop/Code")
# Select data
hourly_data <- list.files(path = "data/hourly_data/", pattern = ".*mo1[0-9].txt")
# Select data
hourly_data <- list.files(path = "data/hourly_data/", pattern = ".*mo1[0-9].txt")
# Determinamos el ancho de cada campo
long <- c(8,2,2,2,2,2,2,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6)
# Determinamos el nombre de las columnas
column_name <- c("estacion","contaminante","tecnica","periodo","anyo","mes","dia","hora1","hora2","hora3","hora4","hora5","hora6","hora7","hora8","hora9","hora10","hora11","hora12","hora13","hora14","hora15","hora16","hora17","hora18","hora19","hora20","hora21","hora22","hora23","hora24")
# Cargamos los datos en un DataFrame. Las medidas no válidas ("00.00N") se sobreescriben con "NA"
for (file in hourly_data){
if (exists("hourlyAirQuality")){
temp_dataset <- read.fwf(file = file, widths = long, header = FALSE, col.names = column_name, na.strings = c("00.00N"))
hourlyAirQuality <- rbind(hourlyAirQuality, temp_dataset)
rm(temp_dataset)
}
# Si el DataSet no existe, lo creamos
if (!exists("hourlyAirQuality")){
hourlyAirQuality <- read.fwf(file = file, widths = long, header = FALSE, col.names = column_name, na.strings = c("00.00N"))
}
}
# Select data
hourly_data <- list.files(path = "data/hourly_data/", pattern = ".*mo1[0-9].txt")
# Determinamos el ancho de cada campo
long <- c(8,2,2,2,2,2,2,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6)
# Determinamos el nombre de las columnas
column_name <- c("estacion","contaminante","tecnica","periodo","anyo","mes","dia","hora1","hora2","hora3","hora4","hora5","hora6","hora7","hora8","hora9","hora10","hora11","hora12","hora13","hora14","hora15","hora16","hora17","hora18","hora19","hora20","hora21","hora22","hora23","hora24")
# Cargamos los datos en un DataFrame. Las medidas no válidas ("00.00N") se sobreescriben con "NA"
for (file in hourly_data){
if (exists("hourlyAirQuality")){
temp_dataset <- read.fwf(file = file, widths = long, header = FALSE, col.names = column_name, na.strings = c("00.00N"))
hourlyAirQuality <- rbind(hourlyAirQuality, temp_dataset)
rm(temp_dataset)
}
# Si el DataSet no existe, lo creamos
if (!exists("hourlyAirQuality")){
hourlyAirQuality <- read.fwf(file = file, widths = long, header = FALSE, col.names = column_name, na.strings = c("00.00N"))
}
}
# Important in R establish correctly the path. Just to see in wich path we're working just check in the console with 'getwd()'
setwd("../data/hourly_data")
# Select data
hourly_data<- list.files(pattern = ".*mo1[0-9].txt")
# Determinamos el ancho de cada campo
long <- c(8,2,2,2,2,2,2,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6)
# Determinamos el nombre de las columnas
column_name <- c("estacion","contaminante","tecnica","periodo","anyo","mes","dia","hora1","hora2","hora3","hora4","hora5","hora6","hora7","hora8","hora9","hora10","hora11","hora12","hora13","hora14","hora15","hora16","hora17","hora18","hora19","hora20","hora21","hora22","hora23","hora24")
# Cargamos los datos en un DataFrame. Las medidas no válidas ("00.00N") se sobreescriben con "NA"
for (file in hourly_data){
# Si el DataSet existe, creamos un DataSet auxiliar para unir los datos
if (exists("hourlyAirQuality")){
temp_dataset <- read.fwf(file = file, widths = long, header = FALSE, col.names = column_name, na.strings = c("00.00N"))
hourlyAirQuality <- rbind(hourlyAirQuality, temp_dataset)
rm(temp_dataset)
}
# Si el DataSet no existe, lo creamos
if (!exists("hourlyAirQuality")){
hourlyAirQuality <- read.fwf(file = file, widths = long, header = FALSE, col.names = column_name, na.strings = c("00.00N"))
}
}
getwd()
# Important in R establish correctly the path. Just to see in wich path we're working just check in the console with 'getwd()'
setwd("../data/hourly_data")
getwd()
# Important in R establish correctly the path. Just to see in wich path we're working just check in the console with 'getwd()'
setwd("../data/hourly_data")
